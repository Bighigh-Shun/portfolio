body {

  /* アニメーション */
  /* animation: fadeIn 3s ease 1s 1 normal;
  -webkit-animation: fadeIn 3s ease 1s 1 normal; */

  display: flex;
  justify-content: start;
  /* ↓高さを最低限 100vh に指定 */
  min-height: 100vh;
  position: relative;
}

/* ↓フワッと表示させる */
/* .effect-fade {
  opacity: 0;
  transition: all 300ms;
}
  
.effect-fade.effect-scroll {
  opacity : 1;
} */

/* 透過を 0 → 1 へと濃くする関数 */
/* @keyframes fadeIn {
  from {
    opacity: 0
  }
  to {
    opacity: 1;
  }
} */

/* safari対応 */
/* @-webkit-keyframes fadeIn {
  from {
    opacity: 0
  }
  to {
    opacity: 1;
  }
} */


/* ーーーーーーーーーー ここから aside「共通」 ーーーーーーーーーー */

.aside {

  /* アニメーション */
  /* animation: fadeIn 5s ease 6s 1 normal; */
  /* -webkit-animation: fadeIn 5s ease 6s 1 normal; */


  background-color: navy;
  color: darkkhaki;
  min-width: 225px;
  /* ↓nav と div を横並びにして、縦にする */
  display: flex;
  flex-direction: column;

  /* 位置を左に固定 */
  position: absolute;
  top: 0;
  left: 0;
  height: 100vh;

  /* 透過 */
  /* opacity: 0.8; */

  /* 位置を固定 */
  /* position: fixed; */
}

.aside-title {
  font-size: 15px;
}

a {
  text-decoration: none;
  color: darkkhaki;
  font-size: 15px;
}

.list {
  margin-top: 20px;
  margin-left: 15px;
  font-weight: bold;
}

nav {
  margin-top: 15px;
  margin-left: 10px;
}

.icon {
  width: 20px;
  height: 20px;

}

.insta-icon {
  background-color: lightsalmon;
}


/* ↓ 見えなくする */
.open,.close {
  display: none;
  font-size: 30px;
  margin-top: 10px;
  margin-left: 10px;
}

/* checkbox も見えなくしたいが、「display:none;」を適用すると、ラベル属性とうまく連携しなくなる */
/* 「display:none;」以外の方法で消す必要がある */

input[type="checkbox"]{
  /* ↓ これで、checkbox が隠れる */
  position: absolute;
  left: -50vw;
}

/* ↓ 条件分岐のようなもの。横幅が 1000px 以下になったら適用されるスタイル。*/
@media screen and (max-width: 1000px) {
  main {
    width: 100%;
    /* padding-top: 50px; */
  }
  /* ↓ 元々適用されている「display:none」を書き換える */
  .open,.close {
    display: block;
  }

  .open {
    position: absolute;
  }

  .aside {
    /* 「position: absolute」を設定すると、高さが失われる */
    /* 「height」を与えてやる必要がある */
    position: absolute;
    left: -50vw;
    height: 100%;

    /* 「transition: all;」にて、全てのプロパティの変化について、アニメーションをつける */
    /* アニメーションのスタートから終わりまでの時間 */
    /* なるべく「0.3秒以内」が望ましい */
    transition: all 0.1s;
    /* 背景色は透明になっているので、色をつけてあげることで被らないようにする */
    background: navy;
    color: darkkhaki;
    opacity: 0.8;
  }

  /* 「checked擬似クラス」 */
  /* 「checkbox」に チェック が入ったら、以下のプロパティが適用される */
  input[type="checkbox"]:checked ~ .aside {
    left: 0;
    /* 「transition」のおかげで、ニュッと出てくる */
  }
  input[type="checkbox"]:checked ~ .back {
    position: absolute;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.4);
  }
  /* 間接セレクタ */
  /* 「~」をつけることによって、以下の効果 */
  /* ① ~ の前にある属性（今回の場合だと「input」）と同じ親要素を持ち、 */
  /* ② 且つ 後にある要素に適用される*/
}

/* ーーーーーーーーーー ここから aside-top ーーーーーーーーーー */







/* ーーーーーーーーーー ここから aside-bottom ーーーーーーーーーー */

.aside-bottom {
  height: 200px;
  /* ↓ 上に空けれるだけ空ける */
  margin-top: auto;
}





/* ーーーーーーーーーー ここから main ーーーーーーーーーー */


.main-contents {
  /* ↓横幅をいっぱいまで指定 */
  height: 100vh;
  width: 100%;
  overflow: auto;
  scroll-snap-type: y proximity;
}

.first-view {
  width: 100%;
  height: 100vh;
  background-image: url(world-view.jpg);
  background-size: cover;
  background-position: center;
}


/* メッセージ */

.message {
  font-family: cursive;
  font-size: 45px;
  padding-top: 45px;
}

.first {
  margin-left: 45%;
}

.second {
  margin-left: 75%;
}



/* セカンドビュー */

.second-view {
  height: 100vh;
  width: 100%;
  background-color: skyblue;
}




.sv-contents {
  margin-top: 100px;
  margin-left: 25%;
  display: flex;
  justify-content: space-around;
  text-align: center;
  
}

.image {
  height: 200px;
  width: 280px;
}

.image-text {
  margin-top: 30px;
  font-family: fantasy;
  font-size: 25px;
}

